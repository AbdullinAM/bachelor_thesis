%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 463 255
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, May 6, 2016 3:40:29 PM MSK
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
463 255 setpagesize
0 0 0 0 setmargins
0 0 setorigin
463 255 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
463.000 0.00000 l
463.000 255.000 l
0.00000 255.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
463.000 0.00000 l
463.000 255.000 l
0.00000 255.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 463 255 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -201.000 -187.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
201.000 187.000 m
664.000 187.000 l
664.000 442.000 l
201.000 442.000 l
201.000 187.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -201.000 -187.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -201.000 -187.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -201.000 -187.000 ] defaultmatrix matrix concatmatrix setmatrix
.960784 .960784 .960784 RG
newpath
216.700 206.078 m
216.700 423.000 l
216.700 425.209 218.491 427.000 220.700 427.000  c
644.700 427.000 l
646.909 427.000 648.700 425.209 648.700 423.000  c
648.700 206.078 l
648.700 203.869 646.909 202.078 644.700 202.078  c
220.700 202.078 l
218.491 202.078 216.700 203.869 216.700 206.078  c
h
f
.921569 .921569 .921569 RG
newpath
216.700 202.078 m
648.700 202.078 l
648.700 223.539 l
216.700 223.539 l
216.700 202.078 l
h
f
.960784 .960784 .960784 RG
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
594.561 213.908 m
594.561 212.918 594.357 212.142 593.951 211.580  c
593.545 211.017 592.988 210.736 592.279 210.736  c
591.561 210.736 590.998 211.017 590.592 211.580  c
590.186 212.142 589.982 212.918 589.982 213.908  c
589.982 214.897 590.186 215.673 590.592 216.236  c
590.998 216.798 591.561 217.080 592.279 217.080  c
592.988 217.080 593.545 216.798 593.951 216.236  c
594.357 215.673 594.561 214.897 594.561 213.908  c
h
589.982 211.048 m
590.264 210.559 590.620 210.194 591.053 209.955  c
591.485 209.715 592.003 209.595 592.607 209.595  c
593.597 209.595 594.404 209.991 595.029 210.783  c
595.654 211.574 595.967 212.616 595.967 213.908  c
595.967 215.199 595.654 216.241 595.029 217.033  c
594.404 217.824 593.597 218.220 592.607 218.220  c
592.003 218.220 591.485 218.100 591.053 217.861  c
590.620 217.621 590.264 217.257 589.982 216.767  c
589.982 218.001 l
588.623 218.001 l
588.623 206.611 l
589.982 206.611 l
589.982 211.048 l
h
601.379 210.736 m
600.660 210.736 600.090 211.020 599.668 211.587  c
599.246 212.155 599.035 212.929 599.035 213.908  c
599.035 214.887 599.243 215.658 599.660 216.220  c
600.077 216.783 600.650 217.064 601.379 217.064  c
602.098 217.064 602.665 216.783 603.082 216.220  c
603.499 215.658 603.707 214.887 603.707 213.908  c
603.707 212.939 603.499 212.168 603.082 211.595  c
602.665 211.022 602.098 210.736 601.379 210.736  c
h
601.379 209.595 m
602.546 209.595 603.465 209.978 604.137 210.744  c
604.809 211.509 605.145 212.564 605.145 213.908  c
605.145 215.251 604.809 216.306 604.137 217.072  c
603.465 217.837 602.546 218.220 601.379 218.220  c
600.202 218.220 599.280 217.837 598.613 217.072  c
597.947 216.306 597.613 215.251 597.613 213.908  c
597.613 212.564 597.947 211.509 598.613 210.744  c
599.280 209.978 600.202 209.595 601.379 209.595  c
h
612.134 211.064 m
611.978 210.970 611.811 210.903 611.634 210.861  c
611.457 210.819 611.259 210.798 611.041 210.798  c
610.280 210.798 609.697 211.046 609.291 211.541  c
608.884 212.035 608.681 212.746 608.681 213.673  c
608.681 218.001 l
607.322 218.001 l
607.322 209.798 l
608.681 209.798 l
608.681 211.080 l
608.962 210.580 609.330 210.207 609.783 209.962  c
610.236 209.718 610.791 209.595 611.447 209.595  c
611.541 209.595 611.642 209.603 611.751 209.619  c
611.861 209.634 611.983 209.653 612.119 209.673  c
612.134 211.064 l
h
620.567 213.564 m
620.567 214.220 l
614.364 214.220 l
614.426 215.147 614.708 215.853 615.208 216.337  c
615.708 216.822 616.400 217.064 617.286 217.064  c
617.806 217.064 618.309 217.001 618.793 216.876  c
619.278 216.751 619.760 216.564 620.239 216.314  c
620.239 217.580 l
619.760 217.788 619.265 217.947 618.754 218.056  c
618.244 218.166 617.728 218.220 617.208 218.220  c
615.905 218.220 614.872 217.837 614.106 217.072  c
613.340 216.306 612.958 215.278 612.958 213.986  c
612.958 212.642 613.319 211.574 614.043 210.783  c
614.767 209.991 615.744 209.595 616.973 209.595  c
618.077 209.595 618.952 209.952 619.598 210.666  c
620.244 211.379 620.567 212.345 620.567 213.564  c
h
619.208 213.173 m
619.197 212.434 618.991 211.843 618.590 211.400  c
618.189 210.957 617.655 210.736 616.989 210.736  c
616.239 210.736 615.637 210.949 615.184 211.376  c
614.731 211.804 614.473 212.403 614.411 213.173  c
619.208 213.173 l
h
626.499 213.876 m
625.415 213.876 624.663 214.001 624.241 214.251  c
623.819 214.501 623.608 214.929 623.608 215.533  c
623.608 216.001 623.764 216.376 624.077 216.658  c
624.389 216.939 624.816 217.080 625.358 217.080  c
626.108 217.080 626.709 216.817 627.163 216.291  c
627.616 215.764 627.842 215.059 627.842 214.173  c
627.842 213.876 l
626.499 213.876 l
h
629.186 213.314 m
629.186 218.001 l
627.842 218.001 l
627.842 216.751 l
627.530 217.251 627.144 217.621 626.686 217.861  c
626.228 218.100 625.665 218.220 624.999 218.220  c
624.165 218.220 623.501 217.983 623.006 217.509  c
622.512 217.035 622.264 216.403 622.264 215.611  c
622.264 214.694 622.571 214.001 623.186 213.533  c
623.801 213.064 624.722 212.830 625.952 212.830  c
627.842 212.830 l
627.842 212.689 l
627.842 212.074 627.639 211.595 627.233 211.251  c
626.827 210.908 626.254 210.736 625.514 210.736  c
625.045 210.736 624.587 210.793 624.139 210.908  c
623.691 211.022 623.264 211.194 622.858 211.423  c
622.858 210.173 l
623.347 209.986 623.827 209.843 624.295 209.744  c
624.764 209.645 625.217 209.595 625.655 209.595  c
626.842 209.595 627.728 209.903 628.311 210.517  c
628.894 211.132 629.186 212.064 629.186 213.314  c
h
631.956 206.611 m
633.315 206.611 l
633.315 218.001 l
631.956 218.001 l
631.956 206.611 l
h
636.124 209.798 m
637.483 209.798 l
637.483 218.001 l
636.124 218.001 l
636.124 209.798 l
h
636.124 206.611 m
637.483 206.611 l
637.483 208.314 l
636.124 208.314 l
636.124 206.611 l
h
645.525 210.033 m
645.525 211.314 l
645.150 211.116 644.757 210.970 644.346 210.876  c
643.934 210.783 643.510 210.736 643.072 210.736  c
642.395 210.736 641.890 210.837 641.557 211.041  c
641.223 211.244 641.057 211.548 641.057 211.955  c
641.057 212.267 641.176 212.512 641.416 212.689  c
641.656 212.866 642.140 213.038 642.869 213.205  c
643.322 213.314 l
644.281 213.512 644.960 213.798 645.361 214.173  c
645.762 214.548 645.963 215.069 645.963 215.736  c
645.963 216.496 645.663 217.100 645.064 217.548  c
644.465 217.996 643.635 218.220 642.572 218.220  c
642.135 218.220 641.679 218.176 641.205 218.087  c
640.731 217.999 640.229 217.871 639.697 217.705  c
639.697 216.314 l
640.197 216.574 640.689 216.767 641.174 216.892  c
641.658 217.017 642.135 217.080 642.604 217.080  c
643.239 217.080 643.729 216.973 644.072 216.759  c
644.416 216.546 644.588 216.241 644.588 215.845  c
644.588 215.481 644.463 215.199 644.213 215.001  c
643.963 214.804 643.421 214.616 642.588 214.439  c
642.119 214.330 l
641.286 214.153 640.684 213.882 640.314 213.517  c
639.945 213.153 639.760 212.653 639.760 212.017  c
639.760 211.246 640.033 210.650 640.580 210.228  c
641.127 209.806 641.900 209.595 642.900 209.595  c
643.400 209.595 643.872 209.632 644.314 209.705  c
644.757 209.778 645.161 209.887 645.525 210.033  c
h
f
2 J
10.0000 M
.960784 .960784 .960784 RG
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
216.700 206.078 m
216.700 423.000 l
216.700 425.209 218.491 427.000 220.700 427.000  c
644.700 427.000 l
646.909 427.000 648.700 425.209 648.700 423.000  c
648.700 206.078 l
648.700 203.869 646.909 202.078 644.700 202.078  c
220.700 202.078 l
218.491 202.078 216.700 203.869 216.700 206.078  c
h
S
2 J
10.0000 M
[ ] 0.00000 d
.882353 .882353 .882353 RG
newpath
231.700 332.539 m
231.700 406.000 l
231.700 408.209 233.491 410.000 235.700 410.000  c
413.700 410.000 l
415.909 410.000 417.700 408.209 417.700 406.000  c
417.700 332.539 l
417.700 330.330 415.909 328.539 413.700 328.539  c
235.700 328.539 l
233.491 328.539 231.700 330.330 231.700 332.539  c
h
f
.921569 .921569 .921569 RG
newpath
231.700 328.539 m
417.700 328.539 l
417.700 350.000 l
231.700 350.000 l
231.700 328.539 l
h
f
.882353 .882353 .882353 RG
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
384.026 333.884 m
384.026 335.322 l
383.464 335.061 382.933 334.863 382.433 334.728  c
381.933 334.593 381.453 334.525 380.995 334.525  c
380.183 334.525 379.558 334.681 379.120 334.994  c
378.683 335.306 378.464 335.754 378.464 336.337  c
378.464 336.817 378.610 337.179 378.901 337.423  c
379.193 337.668 379.745 337.869 380.558 338.025  c
381.448 338.212 l
382.552 338.421 383.368 338.791 383.894 339.322  c
384.420 339.853 384.683 340.561 384.683 341.447  c
384.683 342.509 384.328 343.314 383.620 343.861  c
382.912 344.408 381.870 344.681 380.495 344.681  c
379.974 344.681 379.422 344.621 378.839 344.501  c
378.256 344.382 377.651 344.207 377.026 343.978  c
377.026 342.462 l
377.631 342.796 378.219 343.048 378.792 343.220  c
379.365 343.392 379.933 343.478 380.495 343.478  c
381.339 343.478 381.990 343.311 382.448 342.978  c
382.907 342.645 383.136 342.171 383.136 341.556  c
383.136 341.014 382.972 340.593 382.644 340.291  c
382.315 339.988 381.776 339.764 381.026 339.619  c
380.120 339.431 l
379.016 339.212 378.216 338.869 377.722 338.400  c
377.227 337.931 376.979 337.280 376.979 336.447  c
376.979 335.478 377.321 334.715 378.003 334.158  c
378.685 333.600 379.625 333.322 380.823 333.322  c
381.334 333.322 381.854 333.369 382.386 333.462  c
382.917 333.556 383.464 333.697 384.026 333.884  c
h
388.267 333.931 m
388.267 336.259 l
391.032 336.259 l
391.032 337.306 l
388.267 337.306 l
388.267 341.759 l
388.267 342.426 388.358 342.856 388.540 343.048  c
388.722 343.241 389.095 343.337 389.657 343.337  c
391.032 343.337 l
391.032 344.462 l
389.657 344.462 l
388.616 344.462 387.897 344.267 387.501 343.876  c
387.105 343.486 386.907 342.780 386.907 341.759  c
386.907 337.306 l
385.923 337.306 l
385.923 336.259 l
386.907 336.259 l
386.907 333.931 l
388.267 333.931 l
h
396.539 340.337 m
395.455 340.337 394.703 340.462 394.281 340.712  c
393.859 340.962 393.648 341.389 393.648 341.994  c
393.648 342.462 393.804 342.837 394.117 343.119  c
394.429 343.400 394.856 343.541 395.398 343.541  c
396.148 343.541 396.750 343.278 397.203 342.751  c
397.656 342.225 397.882 341.520 397.882 340.634  c
397.882 340.337 l
396.539 340.337 l
h
399.226 339.775 m
399.226 344.462 l
397.882 344.462 l
397.882 343.212 l
397.570 343.712 397.184 344.082 396.726 344.322  c
396.268 344.561 395.705 344.681 395.039 344.681  c
394.205 344.681 393.541 344.444 393.046 343.970  c
392.552 343.496 392.304 342.863 392.304 342.072  c
392.304 341.155 392.611 340.462 393.226 339.994  c
393.841 339.525 394.763 339.291 395.992 339.291  c
397.882 339.291 l
397.882 339.150 l
397.882 338.535 397.679 338.056 397.273 337.712  c
396.867 337.369 396.294 337.197 395.554 337.197  c
395.085 337.197 394.627 337.254 394.179 337.369  c
393.731 337.483 393.304 337.655 392.898 337.884  c
392.898 336.634 l
393.388 336.447 393.867 336.304 394.335 336.205  c
394.804 336.106 395.257 336.056 395.695 336.056  c
396.882 336.056 397.768 336.363 398.351 336.978  c
398.934 337.593 399.226 338.525 399.226 339.775  c
h
403.340 333.931 m
403.340 336.259 l
406.105 336.259 l
406.105 337.306 l
403.340 337.306 l
403.340 341.759 l
403.340 342.426 403.431 342.856 403.613 343.048  c
403.796 343.241 404.168 343.337 404.730 343.337  c
406.105 343.337 l
406.105 344.462 l
404.730 344.462 l
403.689 344.462 402.970 344.267 402.574 343.876  c
402.178 343.486 401.980 342.780 401.980 341.759  c
401.980 337.306 l
400.996 337.306 l
400.996 336.259 l
401.980 336.259 l
401.980 333.931 l
403.340 333.931 l
h
414.909 340.025 m
414.909 340.681 l
408.706 340.681 l
408.768 341.608 409.049 342.314 409.549 342.798  c
410.049 343.283 410.742 343.525 411.627 343.525  c
412.148 343.525 412.651 343.462 413.135 343.337  c
413.620 343.212 414.101 343.025 414.581 342.775  c
414.581 344.041 l
414.101 344.249 413.607 344.408 413.096 344.517  c
412.586 344.626 412.070 344.681 411.549 344.681  c
410.247 344.681 409.213 344.298 408.448 343.533  c
407.682 342.767 407.299 341.738 407.299 340.447  c
407.299 339.103 407.661 338.035 408.385 337.244  c
409.109 336.452 410.086 336.056 411.315 336.056  c
412.419 336.056 413.294 336.413 413.940 337.126  c
414.586 337.840 414.909 338.806 414.909 340.025  c
h
413.549 339.634 m
413.539 338.895 413.333 338.304 412.932 337.861  c
412.531 337.418 411.997 337.197 411.331 337.197  c
410.581 337.197 409.979 337.410 409.526 337.837  c
409.073 338.264 408.815 338.863 408.752 339.634  c
413.549 339.634 l
h
f
2 J
10.0000 M
.882353 .882353 .882353 RG
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
231.700 332.539 m
231.700 406.000 l
231.700 408.209 233.491 410.000 235.700 410.000  c
413.700 410.000 l
415.909 410.000 417.700 408.209 417.700 406.000  c
417.700 332.539 l
417.700 330.330 415.909 328.539 413.700 328.539  c
235.700 328.539 l
233.491 328.539 231.700 330.330 231.700 332.539  c
h
S
2 J
10.0000 M
[ ] 0.00000 d
.882353 .882353 .882353 RG
newpath
231.700 242.539 m
231.700 316.000 l
231.700 318.209 233.491 320.000 235.700 320.000  c
413.700 320.000 l
415.909 320.000 417.700 318.209 417.700 316.000  c
417.700 242.539 l
417.700 240.330 415.909 238.539 413.700 238.539  c
235.700 238.539 l
233.491 238.539 231.700 240.330 231.700 242.539  c
h
f
.921569 .921569 .921569 RG
newpath
231.700 238.539 m
417.700 238.539 l
417.700 260.000 l
231.700 260.000 l
231.700 238.539 l
h
f
.882353 .882353 .882353 RG
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
367.742 244.744 m
367.742 248.853 l
369.602 248.853 l
370.289 248.853 370.820 248.673 371.195 248.314  c
371.570 247.955 371.758 247.447 371.758 246.791  c
371.758 246.134 371.570 245.629 371.195 245.275  c
370.820 244.921 370.289 244.744 369.602 244.744  c
367.742 244.744 l
h
366.258 243.525 m
369.602 243.525 l
370.831 243.525 371.758 243.804 372.383 244.361  c
373.008 244.918 373.320 245.728 373.320 246.791  c
373.320 247.874 373.008 248.692 372.383 249.244  c
371.758 249.796 370.831 250.072 369.602 250.072  c
367.742 250.072 l
367.742 254.462 l
366.258 254.462 l
366.258 243.525 l
h
378.975 250.337 m
377.892 250.337 377.139 250.462 376.717 250.712  c
376.295 250.962 376.084 251.389 376.084 251.994  c
376.084 252.462 376.241 252.837 376.553 253.119  c
376.866 253.400 377.293 253.541 377.834 253.541  c
378.584 253.541 379.186 253.278 379.639 252.751  c
380.092 252.225 380.319 251.520 380.319 250.634  c
380.319 250.337 l
378.975 250.337 l
h
381.663 249.775 m
381.663 254.462 l
380.319 254.462 l
380.319 253.212 l
380.006 253.712 379.621 254.082 379.163 254.322  c
378.704 254.561 378.142 254.681 377.475 254.681  c
376.642 254.681 375.978 254.444 375.483 253.970  c
374.988 253.496 374.741 252.863 374.741 252.072  c
374.741 251.155 375.048 250.462 375.663 249.994  c
376.277 249.525 377.199 249.291 378.428 249.291  c
380.319 249.291 l
380.319 249.150 l
380.319 248.535 380.116 248.056 379.709 247.712  c
379.303 247.369 378.730 247.197 377.991 247.197  c
377.522 247.197 377.064 247.254 376.616 247.369  c
376.168 247.483 375.741 247.655 375.334 247.884  c
375.334 246.634 l
375.824 246.447 376.303 246.304 376.772 246.205  c
377.241 246.106 377.694 246.056 378.131 246.056  c
379.319 246.056 380.204 246.363 380.788 246.978  c
381.371 247.593 381.663 248.525 381.663 249.775  c
h
389.667 246.494 m
389.667 247.775 l
389.292 247.577 388.899 247.431 388.487 247.337  c
388.076 247.244 387.651 247.197 387.214 247.197  c
386.537 247.197 386.032 247.298 385.698 247.501  c
385.365 247.705 385.198 248.009 385.198 248.416  c
385.198 248.728 385.318 248.973 385.558 249.150  c
385.797 249.327 386.282 249.499 387.011 249.666  c
387.464 249.775 l
388.422 249.973 389.102 250.259 389.503 250.634  c
389.904 251.009 390.104 251.530 390.104 252.197  c
390.104 252.957 389.805 253.561 389.206 254.009  c
388.607 254.457 387.776 254.681 386.714 254.681  c
386.276 254.681 385.821 254.637 385.347 254.548  c
384.873 254.460 384.370 254.332 383.839 254.166  c
383.839 252.775 l
384.339 253.035 384.831 253.228 385.315 253.353  c
385.800 253.478 386.276 253.541 386.745 253.541  c
387.381 253.541 387.870 253.434 388.214 253.220  c
388.558 253.007 388.729 252.702 388.729 252.306  c
388.729 251.942 388.604 251.660 388.354 251.462  c
388.104 251.264 387.563 251.077 386.729 250.900  c
386.261 250.791 l
385.427 250.613 384.826 250.343 384.456 249.978  c
384.086 249.613 383.901 249.113 383.901 248.478  c
383.901 247.707 384.175 247.111 384.722 246.689  c
385.269 246.267 386.042 246.056 387.042 246.056  c
387.542 246.056 388.013 246.093 388.456 246.166  c
388.899 246.238 389.302 246.348 389.667 246.494  c
h
397.482 246.494 m
397.482 247.775 l
397.107 247.577 396.714 247.431 396.302 247.337  c
395.891 247.244 395.466 247.197 395.029 247.197  c
394.352 247.197 393.847 247.298 393.513 247.501  c
393.180 247.705 393.013 248.009 393.013 248.416  c
393.013 248.728 393.133 248.973 393.373 249.150  c
393.612 249.327 394.097 249.499 394.826 249.666  c
395.279 249.775 l
396.237 249.973 396.917 250.259 397.318 250.634  c
397.719 251.009 397.919 251.530 397.919 252.197  c
397.919 252.957 397.620 253.561 397.021 254.009  c
396.422 254.457 395.591 254.681 394.529 254.681  c
394.091 254.681 393.636 254.637 393.162 254.548  c
392.688 254.460 392.185 254.332 391.654 254.166  c
391.654 252.775 l
392.154 253.035 392.646 253.228 393.130 253.353  c
393.615 253.478 394.091 253.541 394.560 253.541  c
395.195 253.541 395.685 253.434 396.029 253.220  c
396.373 253.007 396.544 252.702 396.544 252.306  c
396.544 251.942 396.419 251.660 396.169 251.462  c
395.919 251.264 395.378 251.077 394.544 250.900  c
394.076 250.791 l
393.242 250.613 392.641 250.343 392.271 249.978  c
391.901 249.613 391.716 249.113 391.716 248.478  c
391.716 247.707 391.990 247.111 392.537 246.689  c
393.083 246.267 393.857 246.056 394.857 246.056  c
395.357 246.056 395.828 246.093 396.271 246.166  c
396.714 246.238 397.117 246.348 397.482 246.494  c
h
407.094 250.025 m
407.094 250.681 l
400.891 250.681 l
400.953 251.608 401.234 252.314 401.734 252.798  c
402.234 253.283 402.927 253.525 403.812 253.525  c
404.333 253.525 404.836 253.462 405.320 253.337  c
405.805 253.212 406.286 253.025 406.766 252.775  c
406.766 254.041 l
406.286 254.249 405.792 254.408 405.281 254.517  c
404.771 254.626 404.255 254.681 403.734 254.681  c
402.432 254.681 401.398 254.298 400.633 253.533  c
399.867 252.767 399.484 251.738 399.484 250.447  c
399.484 249.103 399.846 248.035 400.570 247.244  c
401.294 246.452 402.271 246.056 403.500 246.056  c
404.604 246.056 405.479 246.413 406.125 247.126  c
406.771 247.840 407.094 248.806 407.094 250.025  c
h
405.734 249.634 m
405.724 248.895 405.518 248.304 405.117 247.861  c
404.716 247.418 404.182 247.197 403.516 247.197  c
402.766 247.197 402.164 247.410 401.711 247.837  c
401.258 248.264 401.000 248.863 400.938 249.634  c
405.734 249.634 l
h
414.525 246.494 m
414.525 247.775 l
414.150 247.577 413.757 247.431 413.346 247.337  c
412.934 247.244 412.510 247.197 412.072 247.197  c
411.395 247.197 410.890 247.298 410.557 247.501  c
410.223 247.705 410.057 248.009 410.057 248.416  c
410.057 248.728 410.176 248.973 410.416 249.150  c
410.656 249.327 411.140 249.499 411.869 249.666  c
412.322 249.775 l
413.281 249.973 413.960 250.259 414.361 250.634  c
414.762 251.009 414.963 251.530 414.963 252.197  c
414.963 252.957 414.663 253.561 414.064 254.009  c
413.465 254.457 412.635 254.681 411.572 254.681  c
411.135 254.681 410.679 254.637 410.205 254.548  c
409.731 254.460 409.229 254.332 408.697 254.166  c
408.697 252.775 l
409.197 253.035 409.689 253.228 410.174 253.353  c
410.658 253.478 411.135 253.541 411.604 253.541  c
412.239 253.541 412.729 253.434 413.072 253.220  c
413.416 253.007 413.588 252.702 413.588 252.306  c
413.588 251.942 413.463 251.660 413.213 251.462  c
412.963 251.264 412.421 251.077 411.588 250.900  c
411.119 250.791 l
410.286 250.613 409.684 250.343 409.314 249.978  c
408.945 249.613 408.760 249.113 408.760 248.478  c
408.760 247.707 409.033 247.111 409.580 246.689  c
410.127 246.267 410.900 246.056 411.900 246.056  c
412.400 246.056 412.872 246.093 413.314 246.166  c
413.757 246.238 414.161 246.348 414.525 246.494  c
h
f
2 J
10.0000 M
.882353 .882353 .882353 RG
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
231.700 242.539 m
231.700 316.000 l
231.700 318.209 233.491 320.000 235.700 320.000  c
413.700 320.000 l
415.909 320.000 417.700 318.209 417.700 316.000  c
417.700 242.539 l
417.700 240.330 415.909 238.539 413.700 238.539  c
235.700 238.539 l
233.491 238.539 231.700 240.330 231.700 242.539  c
h
S
2 J
10.0000 M
[ ] 0.00000 d
.600000 .800000 1.00000 RG
newpath
246.700 275.000 m
402.700 275.000 l
402.700 305.000 l
246.700 305.000 l
246.700 275.000 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
297.578 284.122 m
297.578 285.997 l
296.984 285.435 296.348 285.015 295.671 284.739  c
294.994 284.463 294.276 284.325 293.515 284.325  c
292.015 284.325 290.867 284.784 290.070 285.700  c
289.273 286.617 288.875 287.945 288.875 289.685  c
288.875 291.414 289.273 292.737 290.070 293.653  c
290.867 294.570 292.015 295.028 293.515 295.028  c
294.276 295.028 294.994 294.890 295.671 294.614  c
296.348 294.338 296.984 293.924 297.578 293.372  c
297.578 295.216 l
296.953 295.643 296.294 295.961 295.601 296.169  c
294.908 296.377 294.177 296.481 293.406 296.481  c
291.416 296.481 289.851 295.875 288.710 294.661  c
287.570 293.448 287.000 291.789 287.000 289.685  c
287.000 287.570 287.570 285.906 288.710 284.692  c
289.851 283.479 291.416 282.872 293.406 282.872  c
294.187 282.872 294.924 282.976 295.617 283.185  c
296.309 283.393 296.963 283.705 297.578 284.122  c
h
304.068 287.528 m
303.193 287.528 302.505 287.864 302.005 288.536  c
301.505 289.208 301.255 290.138 301.255 291.325  c
301.255 292.502 301.505 293.429 302.005 294.106  c
302.505 294.784 303.193 295.122 304.068 295.122  c
304.922 295.122 305.602 294.781 306.107 294.099  c
306.612 293.416 306.865 292.492 306.865 291.325  c
306.865 290.159 306.612 289.234 306.107 288.552  c
305.602 287.869 304.922 287.528 304.068 287.528  c
h
304.068 286.153 m
305.474 286.153 306.578 286.609 307.380 287.521  c
308.182 288.432 308.583 289.700 308.583 291.325  c
308.583 292.929 308.182 294.190 307.380 295.106  c
306.578 296.023 305.474 296.481 304.068 296.481  c
302.651 296.481 301.544 296.023 300.748 295.106  c
299.951 294.190 299.552 292.929 299.552 291.325  c
299.552 289.700 299.951 288.432 300.748 287.521  c
301.544 286.609 302.651 286.153 304.068 286.153  c
h
319.440 290.294 m
319.440 296.231 l
317.831 296.231 l
317.831 290.341 l
317.831 289.414 317.648 288.718 317.284 288.255  c
316.919 287.791 316.372 287.560 315.643 287.560  c
314.768 287.560 314.081 287.838 313.581 288.396  c
313.081 288.953 312.831 289.711 312.831 290.669  c
312.831 296.231 l
311.206 296.231 l
311.206 286.388 l
312.831 286.388 l
312.831 287.919 l
313.216 287.325 313.672 286.882 314.198 286.591  c
314.724 286.299 315.325 286.153 316.002 286.153  c
317.138 286.153 317.995 286.502 318.573 287.200  c
319.151 287.898 319.440 288.929 319.440 290.294  c
h
324.270 283.591 m
324.270 286.388 l
327.598 286.388 l
327.598 287.638 l
324.270 287.638 l
324.270 292.981 l
324.270 293.784 324.379 294.299 324.598 294.528  c
324.817 294.757 325.265 294.872 325.942 294.872  c
327.598 294.872 l
327.598 296.231 l
325.942 296.231 l
324.692 296.231 323.830 296.000 323.356 295.536  c
322.882 295.073 322.645 294.221 322.645 292.981  c
322.645 287.638 l
321.458 287.638 l
321.458 286.388 l
322.645 286.388 l
322.645 283.591 l
324.270 283.591 l
h
335.437 287.903 m
335.250 287.799 335.049 287.721 334.835 287.669  c
334.622 287.617 334.385 287.591 334.125 287.591  c
333.218 287.591 332.520 287.888 332.031 288.481  c
331.541 289.075 331.296 289.929 331.296 291.044  c
331.296 296.231 l
329.671 296.231 l
329.671 286.388 l
331.296 286.388 l
331.296 287.919 l
331.630 287.315 332.070 286.869 332.617 286.583  c
333.164 286.297 333.828 286.153 334.609 286.153  c
334.713 286.153 334.833 286.161 334.968 286.177  c
335.104 286.192 335.255 286.211 335.421 286.231  c
335.437 287.903 l
h
341.603 291.278 m
340.291 291.278 339.384 291.429 338.884 291.731  c
338.384 292.034 338.134 292.544 338.134 293.263  c
338.134 293.836 338.322 294.291 338.697 294.630  c
339.072 294.968 339.587 295.138 340.244 295.138  c
341.139 295.138 341.858 294.820 342.400 294.185  c
342.942 293.549 343.212 292.700 343.212 291.638  c
343.212 291.278 l
341.603 291.278 l
h
344.822 290.622 m
344.822 296.231 l
343.212 296.231 l
343.212 294.731 l
342.837 295.336 342.376 295.778 341.830 296.060  c
341.283 296.341 340.608 296.481 339.806 296.481  c
338.796 296.481 337.994 296.200 337.400 295.638  c
336.806 295.075 336.509 294.320 336.509 293.372  c
336.509 292.257 336.882 291.419 337.626 290.856  c
338.371 290.294 339.478 290.013 340.947 290.013  c
343.212 290.013 l
343.212 289.856 l
343.212 289.117 342.968 288.544 342.478 288.138  c
341.988 287.731 341.301 287.528 340.416 287.528  c
339.853 287.528 339.306 287.593 338.775 287.724  c
338.244 287.854 337.728 288.054 337.228 288.325  c
337.228 286.841 l
337.822 286.612 338.397 286.440 338.955 286.325  c
339.512 286.211 340.056 286.153 340.587 286.153  c
342.004 286.153 343.064 286.523 343.767 287.263  c
344.470 288.002 344.822 289.122 344.822 290.622  c
h
355.243 286.763 m
355.243 288.278 l
354.784 288.028 354.326 287.841 353.868 287.716  c
353.409 287.591 352.946 287.528 352.477 287.528  c
351.425 287.528 350.610 287.859 350.032 288.521  c
349.454 289.182 349.165 290.117 349.165 291.325  c
349.165 292.523 349.454 293.455 350.032 294.122  c
350.610 294.789 351.425 295.122 352.477 295.122  c
352.946 295.122 353.409 295.057 353.868 294.927  c
354.326 294.797 354.784 294.606 355.243 294.356  c
355.243 295.856 l
354.795 296.065 354.329 296.221 353.844 296.325  c
353.360 296.429 352.847 296.481 352.305 296.481  c
350.816 296.481 349.636 296.015 348.766 295.083  c
347.896 294.151 347.461 292.898 347.461 291.325  c
347.461 289.711 347.902 288.445 348.782 287.528  c
349.662 286.612 350.868 286.153 352.399 286.153  c
352.899 286.153 353.386 286.203 353.860 286.302  c
354.334 286.401 354.795 286.554 355.243 286.763  c
h
359.655 283.591 m
359.655 286.388 l
362.983 286.388 l
362.983 287.638 l
359.655 287.638 l
359.655 292.981 l
359.655 293.784 359.764 294.299 359.983 294.528  c
360.202 294.757 360.650 294.872 361.327 294.872  c
362.983 294.872 l
362.983 296.231 l
361.327 296.231 l
360.077 296.231 359.215 296.000 358.741 295.536  c
358.267 295.073 358.030 294.221 358.030 292.981  c
358.030 287.638 l
356.842 287.638 l
356.842 286.388 l
358.030 286.388 l
358.030 283.591 l
359.655 283.591 l
h
f
2 J
10.0000 M
.600000 .800000 1.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
246.700 275.000 m
402.700 275.000 l
402.700 305.000 l
246.700 305.000 l
246.700 275.000 l
h
S
2 J
10.0000 M
.600000 .800000 1.00000 RG
newpath
246.700 365.000 m
402.700 365.000 l
402.700 395.000 l
246.700 395.000 l
246.700 365.000 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
269.167 373.106 m
280.261 373.106 l
280.261 374.606 l
275.605 374.606 l
275.605 386.231 l
273.824 386.231 l
273.824 374.606 l
269.167 374.606 l
269.167 373.106 l
h
287.616 377.903 m
287.428 377.799 287.228 377.721 287.014 377.669  c
286.801 377.617 286.564 377.591 286.303 377.591  c
285.397 377.591 284.699 377.888 284.209 378.481  c
283.720 379.075 283.475 379.929 283.475 381.044  c
283.475 386.231 l
281.850 386.231 l
281.850 376.388 l
283.475 376.388 l
283.475 377.919 l
283.808 377.315 284.249 376.869 284.795 376.583  c
285.342 376.297 286.006 376.153 286.788 376.153  c
286.892 376.153 287.012 376.161 287.147 376.177  c
287.282 376.192 287.433 376.211 287.600 376.231  c
287.616 377.903 l
h
293.782 381.278 m
292.469 381.278 291.563 381.429 291.063 381.731  c
290.563 382.034 290.313 382.544 290.313 383.263  c
290.313 383.836 290.500 384.291 290.875 384.630  c
291.250 384.968 291.766 385.138 292.422 385.138  c
293.318 385.138 294.037 384.820 294.579 384.185  c
295.120 383.549 295.391 382.700 295.391 381.638  c
295.391 381.278 l
293.782 381.278 l
h
297.000 380.622 m
297.000 386.231 l
295.391 386.231 l
295.391 384.731 l
295.016 385.336 294.555 385.778 294.008 386.060  c
293.461 386.341 292.787 386.481 291.985 386.481  c
290.974 386.481 290.172 386.200 289.579 385.638  c
288.985 385.075 288.688 384.320 288.688 383.372  c
288.688 382.257 289.060 381.419 289.805 380.856  c
290.550 380.294 291.657 380.013 293.125 380.013  c
295.391 380.013 l
295.391 379.856 l
295.391 379.117 295.146 378.544 294.657 378.138  c
294.167 377.731 293.480 377.528 292.594 377.528  c
292.032 377.528 291.485 377.593 290.954 377.724  c
290.422 377.854 289.907 378.054 289.407 378.325  c
289.407 376.841 l
290.000 376.612 290.576 376.440 291.133 376.325  c
291.691 376.211 292.235 376.153 292.766 376.153  c
294.183 376.153 295.243 376.523 295.946 377.263  c
296.649 378.002 297.000 379.122 297.000 380.622  c
h
308.515 380.294 m
308.515 386.231 l
306.906 386.231 l
306.906 380.341 l
306.906 379.414 306.723 378.718 306.359 378.255  c
305.994 377.791 305.447 377.560 304.718 377.560  c
303.843 377.560 303.156 377.838 302.656 378.396  c
302.156 378.953 301.906 379.711 301.906 380.669  c
301.906 386.231 l
300.281 386.231 l
300.281 376.388 l
301.906 376.388 l
301.906 377.919 l
302.291 377.325 302.747 376.882 303.273 376.591  c
303.799 376.299 304.401 376.153 305.078 376.153  c
306.213 376.153 307.070 376.502 307.648 377.200  c
308.226 377.898 308.515 378.929 308.515 380.294  c
h
318.017 376.685 m
318.017 378.200 l
317.559 377.971 317.085 377.797 316.595 377.677  c
316.106 377.557 315.595 377.497 315.064 377.497  c
314.262 377.497 313.660 377.622 313.259 377.872  c
312.858 378.122 312.658 378.492 312.658 378.981  c
312.658 379.356 312.801 379.651 313.087 379.864  c
313.374 380.078 313.949 380.284 314.814 380.481  c
315.376 380.591 l
316.522 380.841 317.337 381.190 317.822 381.638  c
318.306 382.086 318.548 382.711 318.548 383.513  c
318.548 384.429 318.186 385.153 317.462 385.685  c
316.738 386.216 315.746 386.481 314.486 386.481  c
313.955 386.481 313.403 386.432 312.830 386.333  c
312.257 386.234 311.653 386.080 311.017 385.872  c
311.017 384.200 l
311.621 384.513 312.212 384.747 312.791 384.903  c
313.369 385.060 313.944 385.138 314.517 385.138  c
315.278 385.138 315.863 385.007 316.275 384.747  c
316.686 384.487 316.892 384.117 316.892 383.638  c
316.892 383.200 316.744 382.864 316.447 382.630  c
316.150 382.396 315.501 382.169 314.501 381.950  c
313.939 381.825 l
312.929 381.606 312.202 381.281 311.759 380.849  c
311.317 380.416 311.095 379.815 311.095 379.044  c
311.095 378.127 311.423 377.416 312.080 376.911  c
312.736 376.406 313.668 376.153 314.876 376.153  c
315.470 376.153 316.030 376.198 316.556 376.286  c
317.082 376.375 317.569 376.507 318.017 376.685  c
h
326.114 372.560 m
326.114 373.903 l
324.567 373.903 l
323.984 373.903 323.580 374.021 323.356 374.255  c
323.132 374.489 323.020 374.909 323.020 375.513  c
323.020 376.388 l
325.676 376.388 l
325.676 377.638 l
323.020 377.638 l
323.020 386.231 l
321.379 386.231 l
321.379 377.638 l
319.833 377.638 l
319.833 376.388 l
321.379 376.388 l
321.379 375.700 l
321.379 374.606 321.635 373.810 322.145 373.310  c
322.655 372.810 323.468 372.560 324.583 372.560  c
326.114 372.560 l
h
331.279 377.528 m
330.404 377.528 329.716 377.864 329.216 378.536  c
328.716 379.208 328.466 380.138 328.466 381.325  c
328.466 382.502 328.716 383.429 329.216 384.106  c
329.716 384.784 330.404 385.122 331.279 385.122  c
332.133 385.122 332.813 384.781 333.318 384.099  c
333.823 383.416 334.076 382.492 334.076 381.325  c
334.076 380.159 333.823 379.234 333.318 378.552  c
332.813 377.869 332.133 377.528 331.279 377.528  c
h
331.279 376.153 m
332.685 376.153 333.789 376.609 334.591 377.521  c
335.393 378.432 335.794 379.700 335.794 381.325  c
335.794 382.929 335.393 384.190 334.591 385.106  c
333.789 386.023 332.685 386.481 331.279 386.481  c
329.862 386.481 328.755 386.023 327.958 385.106  c
327.162 384.190 326.763 382.929 326.763 381.325  c
326.763 379.700 327.162 378.432 327.958 377.521  c
328.755 376.609 329.862 376.153 331.279 376.153  c
h
344.182 377.903 m
343.995 377.799 343.794 377.721 343.581 377.669  c
343.367 377.617 343.130 377.591 342.870 377.591  c
341.963 377.591 341.265 377.888 340.776 378.481  c
340.286 379.075 340.042 379.929 340.042 381.044  c
340.042 386.231 l
338.417 386.231 l
338.417 376.388 l
340.042 376.388 l
340.042 377.919 l
340.375 377.315 340.815 376.869 341.362 376.583  c
341.909 376.297 342.573 376.153 343.354 376.153  c
343.458 376.153 343.578 376.161 343.713 376.177  c
343.849 376.192 344.000 376.211 344.167 376.231  c
344.182 377.903 l
h
353.536 378.278 m
353.942 377.549 354.426 377.013 354.989 376.669  c
355.551 376.325 356.213 376.153 356.973 376.153  c
357.994 376.153 358.783 376.513 359.340 377.231  c
359.898 377.950 360.176 378.971 360.176 380.294  c
360.176 386.231 l
358.551 386.231 l
358.551 380.341 l
358.551 379.403 358.385 378.705 358.051 378.247  c
357.718 377.789 357.208 377.560 356.520 377.560  c
355.687 377.560 355.028 377.838 354.543 378.396  c
354.059 378.953 353.817 379.711 353.817 380.669  c
353.817 386.231 l
352.176 386.231 l
352.176 380.341 l
352.176 379.393 352.010 378.692 351.676 378.239  c
351.343 377.786 350.827 377.560 350.129 377.560  c
349.306 377.560 348.653 377.838 348.168 378.396  c
347.684 378.953 347.442 379.711 347.442 380.669  c
347.442 386.231 l
345.817 386.231 l
345.817 376.388 l
347.442 376.388 l
347.442 377.919 l
347.806 377.315 348.247 376.869 348.762 376.583  c
349.278 376.297 349.890 376.153 350.598 376.153  c
351.317 376.153 351.926 376.336 352.426 376.700  c
352.926 377.065 353.296 377.591 353.536 378.278  c
h
371.820 380.903 m
371.820 381.700 l
364.398 381.700 l
364.460 382.815 364.794 383.664 365.398 384.247  c
366.002 384.830 366.841 385.122 367.914 385.122  c
368.528 385.122 369.127 385.044 369.710 384.888  c
370.294 384.731 370.872 384.502 371.445 384.200  c
371.445 385.731 l
370.872 385.981 370.281 386.169 369.671 386.294  c
369.062 386.419 368.440 386.481 367.804 386.481  c
366.242 386.481 365.002 386.026 364.085 385.114  c
363.169 384.203 362.710 382.966 362.710 381.403  c
362.710 379.789 363.145 378.510 364.015 377.567  c
364.885 376.625 366.054 376.153 367.523 376.153  c
368.856 376.153 369.906 376.578 370.671 377.427  c
371.437 378.276 371.820 379.435 371.820 380.903  c
h
370.210 380.435 m
370.200 379.549 369.953 378.843 369.468 378.317  c
368.984 377.791 368.346 377.528 367.554 377.528  c
366.648 377.528 365.924 377.781 365.382 378.286  c
364.841 378.791 364.528 379.507 364.445 380.435  c
370.210 380.435 l
h
380.191 377.903 m
380.003 377.799 379.803 377.721 379.589 377.669  c
379.376 377.617 379.139 377.591 378.878 377.591  c
377.972 377.591 377.274 377.888 376.785 378.481  c
376.295 379.075 376.050 379.929 376.050 381.044  c
376.050 386.231 l
374.425 386.231 l
374.425 376.388 l
376.050 376.388 l
376.050 377.919 l
376.384 377.315 376.824 376.869 377.371 376.583  c
377.917 376.297 378.582 376.153 379.363 376.153  c
379.467 376.153 379.587 376.161 379.722 376.177  c
379.858 376.192 380.009 376.211 380.175 376.231  c
380.191 377.903 l
h
f
2 J
10.0000 M
.600000 .800000 1.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
246.700 365.000 m
402.700 365.000 l
402.700 395.000 l
246.700 395.000 l
246.700 365.000 l
h
S
2 J
10.0000 M
.882353 .882353 .882353 RG
newpath
447.700 279.000 m
447.700 352.461 l
447.700 354.670 449.491 356.461 451.700 356.461  c
629.700 356.461 l
631.909 356.461 633.700 354.670 633.700 352.461  c
633.700 279.000 l
633.700 276.791 631.909 275.000 629.700 275.000  c
451.700 275.000 l
449.491 275.000 447.700 276.791 447.700 279.000  c
h
f
.921569 .921569 .921569 RG
newpath
447.700 275.000 m
633.700 275.000 l
633.700 296.461 l
447.700 296.461 l
447.700 275.000 l
h
f
.882353 .882353 .882353 RG
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
608.105 280.345 m
608.105 281.783 l
607.542 281.522 607.011 281.324 606.511 281.189  c
606.011 281.054 605.532 280.986 605.074 280.986  c
604.261 280.986 603.636 281.142 603.199 281.455  c
602.761 281.767 602.542 282.215 602.542 282.798  c
602.542 283.278 602.688 283.639 602.980 283.884  c
603.272 284.129 603.824 284.330 604.636 284.486  c
605.527 284.673 l
606.631 284.882 607.446 285.251 607.972 285.783  c
608.498 286.314 608.761 287.022 608.761 287.908  c
608.761 288.970 608.407 289.775 607.699 290.322  c
606.990 290.869 605.949 291.142 604.574 291.142  c
604.053 291.142 603.501 291.082 602.917 290.962  c
602.334 290.843 601.730 290.668 601.105 290.439  c
601.105 288.923 l
601.709 289.257 602.298 289.509 602.871 289.681  c
603.444 289.853 604.011 289.939 604.574 289.939  c
605.417 289.939 606.069 289.772 606.527 289.439  c
606.985 289.106 607.214 288.632 607.214 288.017  c
607.214 287.475 607.050 287.054 606.722 286.751  c
606.394 286.449 605.855 286.225 605.105 286.080  c
604.199 285.892 l
603.095 285.673 602.295 285.330 601.800 284.861  c
601.306 284.392 601.058 283.741 601.058 282.908  c
601.058 281.939 601.399 281.176 602.082 280.619  c
602.764 280.061 603.704 279.783 604.902 279.783  c
605.412 279.783 605.933 279.830 606.464 279.923  c
606.996 280.017 607.542 280.158 608.105 280.345  c
h
611.064 279.986 m
613.267 279.986 l
616.064 287.423 l
618.861 279.986 l
621.080 279.986 l
621.080 290.923 l
619.626 290.923 l
619.626 281.314 l
616.814 288.814 l
615.330 288.814 l
612.501 281.314 l
612.501 290.923 l
611.064 290.923 l
611.064 279.986 l
h
622.490 279.986 m
631.740 279.986 l
631.740 281.236 l
627.865 281.236 l
627.865 290.923 l
626.381 290.923 l
626.381 281.236 l
622.490 281.236 l
622.490 279.986 l
h
f
2 J
10.0000 M
.882353 .882353 .882353 RG
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
447.700 279.000 m
447.700 352.461 l
447.700 354.670 449.491 356.461 451.700 356.461  c
629.700 356.461 l
631.909 356.461 633.700 354.670 633.700 352.461  c
633.700 279.000 l
633.700 276.791 631.909 275.000 629.700 275.000  c
451.700 275.000 l
449.491 275.000 447.700 276.791 447.700 279.000  c
h
S
2 J
10.0000 M
[ ] 0.00000 d
.600000 .800000 1.00000 RG
newpath
462.700 311.461 m
618.700 311.461 l
618.700 341.461 l
462.700 341.461 l
462.700 311.461 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
529.824 319.567 m
540.136 319.567 l
540.136 320.927 l
531.839 331.192 l
540.324 331.192 l
540.324 332.692 l
529.621 332.692 l
529.621 331.333 l
537.917 321.067 l
529.824 321.067 l
529.824 319.567 l
h
548.436 325.614 m
549.290 325.802 549.957 326.182 550.436 326.755  c
550.915 327.328 551.155 328.036 551.155 328.880  c
551.155 330.172 550.709 331.172 549.819 331.880  c
548.928 332.588 547.660 332.942 546.014 332.942  c
545.462 332.942 544.894 332.888 544.311 332.778  c
543.728 332.669 543.129 332.510 542.514 332.302  c
542.514 330.583 l
543.004 330.875 543.543 331.093 544.131 331.239  c
544.720 331.385 545.332 331.458 545.967 331.458  c
547.082 331.458 547.931 331.237 548.514 330.794  c
549.097 330.351 549.389 329.713 549.389 328.880  c
549.389 328.109 549.118 327.505 548.577 327.067  c
548.035 326.630 547.280 326.411 546.311 326.411  c
544.780 326.411 l
544.780 324.942 l
546.374 324.942 l
547.249 324.942 547.918 324.768 548.381 324.419  c
548.845 324.070 549.077 323.567 549.077 322.911  c
549.077 322.244 548.837 321.731 548.358 321.372  c
547.879 321.013 547.196 320.833 546.311 320.833  c
545.821 320.833 545.298 320.885 544.741 320.989  c
544.183 321.093 543.571 321.255 542.905 321.474  c
542.905 319.896 l
543.582 319.708 544.215 319.567 544.803 319.474  c
545.392 319.380 545.946 319.333 546.467 319.333  c
547.811 319.333 548.876 319.640 549.663 320.255  c
550.449 320.869 550.842 321.698 550.842 322.739  c
550.842 323.458 550.634 324.070 550.217 324.575  c
549.801 325.080 549.207 325.427 548.436 325.614  c
h
f
2 J
10.0000 M
.600000 .800000 1.00000 RG
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
462.700 311.461 m
618.700 311.461 l
618.700 341.461 l
462.700 341.461 l
462.700 311.461 l
h
S
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
